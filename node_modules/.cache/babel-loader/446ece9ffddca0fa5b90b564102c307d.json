{"ast":null,"code":"var _jsxFileName = \"/Users/samueltownsend/Desktop/War-Card-Game/src/Cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Cards = props => {\n  const {} = props;\n  const Cards = [\"2D\", \"3D\", \"4D\", \"5D\", \"6D\", \"7D\", \"8D\", \"9D\", \"10D\", \"JD\", \"QD\", \"KD\", \"AD\", \"2S\", \"3S\", \"4S\", \"5S\", \"6S\", \"7S\", \"8S\", \"9S\", \"10S\", \"JS\", \"QS\", \"KS\", \"AS\", \"2H\", \"3H\", \"4H\", \"5H\", \"6H\", \"7H\", \"8H\", \"9H\", \"10H\", \"JH\", \"QH\", \"KH\", \"AH\", \"2C\", \"3C\", \"4C\", \"5C\", \"6C\", \"7C\", \"8C\", \"9C\", \"10C\", \"JC\", \"QC\", \"KC\", \"AC\"];\n\n  function shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  const shuffledCards = shuffle(Cards);\n\n  function deal(array) {\n    var computersCards = [];\n    var playersCards = [];\n    var cardsLeft = array.length;\n    var index = 0;\n\n    while (cardsLeft >= 0) {\n      playersCards[index] = array[index];\n      computersCards[index] = array[index + 1];\n      cardsLeft -= 2;\n    }\n\n    return [playersCards, computersCards];\n  }\n\n  personsCards = deal(shuffledCards)[0];\n  compsCards = deal(shuffledCards[1]);\n  console.log(personsCards);\n  console.log(compsCards);\n\n  const flipCard = () => {\n    var playerCard = Cards[Math.floor(52 * Math.random())];\n    var computerCard = Cards[Math.floor(52 * Math.random())];\n    console.log(playerCard);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    onClick: flipCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Flip Card \");\n};\n\nexport default Cards;","map":{"version":3,"sources":["/Users/samueltownsend/Desktop/War-Card-Game/src/Cards.js"],"names":["React","useState","useEffect","Button","Cards","props","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","shuffledCards","deal","computersCards","playersCards","cardsLeft","index","personsCards","compsCards","console","log","flipCard","playerCard","computerCard"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\n\nconst Cards = (props) => {\n    const { } = props;\n\n    const Cards = [\n        \"2D\", \"3D\", \"4D\", \"5D\", \"6D\", \"7D\", \"8D\", \"9D\", \"10D\", \"JD\", \"QD\", \"KD\", \"AD\",\n        \"2S\", \"3S\", \"4S\", \"5S\", \"6S\", \"7S\", \"8S\", \"9S\", \"10S\", \"JS\", \"QS\", \"KS\", \"AS\",\n        \"2H\", \"3H\", \"4H\", \"5H\", \"6H\", \"7H\", \"8H\", \"9H\", \"10H\", \"JH\", \"QH\", \"KH\", \"AH\",\n        \"2C\", \"3C\", \"4C\", \"5C\", \"6C\", \"7C\", \"8C\", \"9C\", \"10C\", \"JC\", \"QC\", \"KC\", \"AC\"\n    ];\n\n    function shuffle(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    const shuffledCards = shuffle(Cards);\n\n    function deal(array) {\n        var computersCards = [];\n        var playersCards = [];\n        var cardsLeft = array.length;\n        var index = 0;\n        while (cardsLeft >= 0) {\n            playersCards[index] = array[index];\n            computersCards[index] = array[index + 1]\n            cardsLeft -= 2;\n        }\n        return [playersCards, computersCards];\n    }\n\n    personsCards = deal(shuffledCards)[0];\n    compsCards = deal(shuffledCards[1]);\n    console.log(personsCards);\n    console.log(compsCards);\n\n\n\n\n    const flipCard = () => {\n        var playerCard = Cards[Math.floor(52 * Math.random())];\n        var computerCard = Cards[Math.floor(52 * Math.random())];\n\n        console.log(playerCard);\n    }\n\n    return (\n        <Button onClick={flipCard}>Flip Card </Button>\n    )\n}\n\nexport default Cards;\n\n"]},"metadata":{},"sourceType":"module"}